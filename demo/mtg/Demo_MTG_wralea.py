
# This file has been generated at $TIME

from openalea.core import *

def register_packages(pkgmanager):
    
    metainfo = {'description': 'MTG demonstration.', 'license': '', 'url': '', 'version': '0.1', 'authors': 'C. Godin', 'institutes': 'INRIA'} 
    pkg = UserPackage("Demo.MTG", metainfo)

    

    nf = CompositeNodeFactory(name='PlantAnalysisChain', 
                              description='Illustrates a typical processing chain for plant analysis in OpenAlea', 
                              category='Stat',
                              doc='',
                              inputs=[],
                              outputs=[],
                              elt_factory={2: ('vplants.mtg', 'MTG'), 3: ('vplants.mtg', 'PlantFrame'), 4: ('vplants.mtg', 'VtxList'), 54: ('Catalog.Math', 'max'), 6: ('vplants.mtg', 'MTGRoot'), 7: ('Catalog.Data', 'int'), 8: ('vplants.mtg', 'DressingData'), 9: ('vplants.mtg', 'PlotPlantFrame'), 10: ('Catalog.Data', 'int'), 45: ('Catalog.Functional', 'map'), 47: ('Catalog.Math', 'min'), 48: ('vplants.mtg', 'VtxFunction'), 49: ('Catalog.Color', 'ColorMap'), 20: ('Catalog.Functional', 'function'), 21: ('Catalog.Functional', 'function'), 22: ('System', 'annotation'), 23: ('System', 'annotation'), 24: ('System', 'annotation'), 25: ('System', 'annotation'), 42: ('System', 'annotation')},
                              elt_connections={143220544: (10, 0, 4, 1), 143220496: (21, 0, 9, 2), 143220580: (48, 0, 45, 0), 143220616: (47, 0, 49, 1), 143220364: (2, 0, 8, 0), 143220376: (8, 0, 3, 23), 143220460: (6, 0, 3, 1), 143220472: (7, 0, 3, 2), 143220592: (2, 0, 6, 0), 143220520: (2, 0, 3, 0), 143220388: (45, 0, 54, 0), 143220628: (48, 0, 49, 0), 143220484: (4, 0, 45, 1), 143220424: (45, 0, 47, 0), 143220568: (49, 0, 9, 5), 143220532: (2, 0, 4, 0), 143220400: (20, 0, 3, 17), 143220508: (3, 0, 9, 0), 143220436: (54, 0, 49, 2)},
                              elt_data={2: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTG', 'posx': -223.26849316777003, 'posy': 23.823421056006779, 'minimal': False}, 3: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'PlantFrame', 'posx': -162.25313221394447, 'posy': 371.96093077589006, 'minimal': False}, 4: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'VtxList', 'posx': 295.63857062215482, 'posy': 151.01134121440685, 'minimal': False}, 6: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTGRoot', 'posx': -162.11011659377772, 'posy': 176.02143544214437, 'minimal': False}, 7: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': '3', 'posx': -102.85611731814583, 'posy': 237.86764709521918, 'minimal': False}, 8: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'DressingData', 'posx': 180.21722448623746, 'posy': 215.75699537522434, 'minimal': False}, 9: {'lazy': True, 'hide': False, 'port_hide_changed': set([5]), 'priority': 0, 'caption': 'PlotPlantFrame', 'posx': -14.314863503646407, 'posy': 604.70973693480005, 'minimal': False}, 10: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': '0', 'posx': 335.97837097405102, 'posy': 94.60283375987234, 'minimal': False}, 20: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'function', 'posx': 39.867809619020818, 'posy': 207.16596419276055, 'minimal': False}, 21: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'function', 'posx': -4.3817215793643527, 'posy': 372.0450827862698, 'minimal': False}, 22: {'txt': 'Scale', 'posx': -69.740555320443491, 'posy': 241.97891985347843}, 23: {'txt': 'to display the plant  in \nupright position', 'posx': -57.985306487923253, 'posy': 158.62439197568045}, 24: {'txt': 'Select components \nto display', 'posx': 79.379203424833008, 'posy': 367.01985802266034}, 25: {'txt': 'Define colors for \ncomponents', 'posx': 56.578891165505752, 'posy': 440.51531249028159}, 42: {'txt': 'Displays a plant with colored information', 'posx': 115.13748072224269, 'posy': 15.480987876285269}, 45: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'map', 'posx': 303.14725899432722, 'posy': 357.18318631947199, 'minimal': False}, 47: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'min', 'posx': 264.60809779689043, 'posy': 419.82253774303621, 'minimal': False}, 48: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'Order', 'posx': 239.25934709499921, 'posy': 295.42617325575668, 'minimal': False}, 49: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'ColorMap', 'posx': 143.00856672120142, 'posy': 504.16722982922346, 'minimal': False}, 54: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'max', 'posx': 348.54765704016461, 'posy': 417.2520313414945, 'minimal': False}, '__out__': {'priority': 0, 'caption': 'Out', 'lazy': True, 'posx': 20.0, 'posy': 250.0}, '__in__': {'priority': 0, 'caption': 'In', 'lazy': True, 'posx': 20.0, 'posy': 5.0}},
                              elt_value={2: [(0, "'/home/sdufour/Bureau/manguier_a21.mtg'")], 3: [(3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None'), (9, 'None'), (10, 'None'), (11, 'None'), (12, 'None'), (13, 'None'), (14, 'None'), (15, 'None'), (16, 'None'), (18, 'None'), (19, 'None'), (20, 'None'), (21, 'None'), (22, 'None')], 4: [], 6: [], 7: [(0, '3')], 8: [(1, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier.drf'")], 9: [(1, 'None'), (3, 'None'), (4, 'None'), (6, 'None'), (7, 'None'), (8, 'None'), (9, 'None'), (10, 'None'), (11, 'None'), (12, 'None'), (13, 'None'), (14, 'None'), (15, 'None'), (16, 'None'), (17, 'None')], 10: [(0, '0')], 20: [(0, '\'def zz(x):\\n  from openalea.aml import Feature\\n  f = Feature(x,"ZZ")\\n  if f is not None: return -f\\n  else: return None\\n\'')], 21: [(0, "'def filterOrder(x):\\n  from openalea.aml import Order\\n  return Order(x)<6\\n'")], 22: [], 23: [], 24: [], 25: [], 42: [], 45: [], 47: [], 48: [(0, "'Order'"), (1, 'None')], 49: [(3, '20'), (4, '80')], 54: [], '__out__': [], '__in__': []},
                              lazy=True,
                              )

    pkg.add_factory(nf)


    nf = CompositeNodeFactory(name='MTGActionOnMultipleMTGs', 
                              description='', 
                              category='STAT.FrequencyDistriibution',
                              doc='',
                              inputs=[],
                              outputs=[],
                              elt_factory={16: ('System', 'annotation'), 17: ('System', 'annotation'), 18: ('System', 'annotation'), 19: ('Catalog.Functional', 'function'), 20: ('Catalog.Functional', 'function'), 22: ('vplants.mtg', 'PlotPlantFrame'), 23: ('vplants.mtg', 'DressingData'), 24: ('Catalog.Data', 'int'), 25: ('vplants.mtg', 'MTGRoot'), 26: ('vplants.mtg', 'PlantFrame'), 27: ('Catalog.Data', 'list'), 28: ('vplants.mtg', 'MTG'), 29: ('vplants.mtg', 'MTG'), 30: ('Catalog.Data', 'int'), 31: ('Catalog.Python', 'getitem'), 32: ('vplants.mtg', 'VtxList'), 33: ('Catalog.Python', 'print'), 34: ('Catalog.Data', 'int'), 35: ('System', 'annotation'), 36: ('System', 'annotation'), 37: ('System', 'annotation'), 38: ('Catalog.Python', 'len'), 39: ('System', 'annotation'), 40: ('System', 'annotation'), 41: ('vplants.mtg', 'MTG'), 42: ('vplants.mtg', 'MTG'), 43: ('System', 'annotation')},
                              elt_connections={10840384: (42, 0, 27, 0), 10840288: (26, 0, 22, 0), 10840228: (31, 0, 26, 0), 10840420: (19, 0, 22, 2), 10840264: (32, 0, 38, 0), 10840396: (34, 0, 32, 1), 10840468: (38, 0, 33, 0), 10840300: (34, 0, 33, 0), 10840336: (24, 0, 26, 2), 10840276: (27, 0, 31, 0), 10840240: (20, 0, 26, 17), 10840456: (41, 0, 27, 0), 10840252: (30, 0, 31, 1), 10840372: (31, 0, 25, 0), 10840348: (25, 0, 26, 1), 10840408: (23, 0, 26, 23), 10840324: (29, 0, 27, 0), 10840432: (28, 0, 27, 0), 10840444: (31, 0, 23, 0), 10840312: (31, 0, 32, 0), 10840360: (30, 0, 33, 0)},
                              elt_data={16: {'txt': 'Select components \nto display', 'posx': 669.54171868349636, 'posy': 456.27320323901353}, 17: {'txt': 'to display the plant  in \nupright position', 'posx': 494.7025888339989, 'posy': 130.30797390257339}, 18: {'txt': 'Scale', 'posx': 461.69734000147866, 'posy': 302.41250178037137}, 19: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'function', 'posx': 590.78079367929899, 'posy': 460.04842800262298, 'minimal': False}, 20: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'function', 'posx': 635.05570494094297, 'posy': 155.09954611965344, 'minimal': False}, 22: {'lazy': True, 'hide': False, 'port_hide_changed': set([5]), 'priority': 0, 'caption': 'PlotPlantFrame', 'posx': 557.6352268441774, 'posy': 570.35583947691384, 'minimal': False}, 23: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'DressingData', 'posx': 635.40511980815972, 'posy': 331.19057730211728, 'minimal': False}, 24: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': '3', 'posx': 433.58177800377632, 'posy': 303.30122902211212, 'minimal': False}, 25: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTGRoot', 'posx': 316.48479746964597, 'posy': 353.95304050607075, 'minimal': False}, 26: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'PlantFrame', 'posx': 435.43476310797769, 'posy': 394.894512702783, 'minimal': False}, 27: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'list', 'posx': 64.898905372067702, 'posy': 155.18528250591021, 'minimal': False}, 28: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTG', 'posx': -65.388096305435056, 'posy': 54.928457665567699, 'minimal': False}, 29: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTG', 'posx': 17.001555810025593, 'posy': 55.287749732795248, 'minimal': False}, 30: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': '2', 'posx': 234.97328939823979, 'posy': 161.11272291137425, 'minimal': False}, 31: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'getitem', 'posx': 105.1243641757444, 'posy': 214.77414873905332, 'minimal': False}, 32: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'VtxList', 'posx': 115.43188340038319, 'posy': 404.1829181176048, 'minimal': False}, 33: {'lazy': False, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'print', 'posx': 233.95870356905084, 'posy': 545.72138868089178, 'minimal': False}, 34: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': '2', 'posx': 208.9256614072317, 'posy': 344.70998060607121, 'minimal': False}, 35: {'txt': 'Selected MTG', 'posx': 15.035170267550484, 'posy': 266.71452521606307}, 36: {'txt': 'Print out the number\nof vertices, for a MTG\nand a scale', 'posx': 36.868799481760519, 'posy': 536.12959630786429}, 37: {'txt': 'Scale', 'posx': 159.74328216804076, 'posy': 348.52945605933564}, 38: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'len', 'posx': 166.38269752865995, 'posy': 458.82776244737192, 'minimal': False}, 39: {'txt': 'MTG index', 'posx': 269.80772982317535, 'posy': 140.59879381069914}, 40: {'txt': 'Mango trees (H. Sinoquet)', 'posx': 4.7572426268745858, 'posy': 13.372737354070324}, 41: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTG', 'posx': 175.75155581002559, 'posy': 54.037749732795248, 'minimal': False}, 42: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTG', 'posx': 98.251555810025593, 'posy': 55.287749732795248, 'minimal': False}, 43: {'txt': 'Action on a set of MTGs', 'posx': 257.25724262687459, 'posy': 58.372737354070324}, '__out__': {'priority': 0, 'caption': 'Out', 'lazy': True, 'posx': 20.0, 'posy': 250.0}, '__in__': {'priority': 0, 'caption': 'In', 'lazy': True, 'posx': 20.0, 'posy': 5.0}},
                              elt_value={16: [], 17: [], 18: [], 19: [(0, "'def filterOrder(x):\\n  from openalea.aml import Order\\n  return Order(x)<6\\n'")], 20: [(0, '\'def zz(x):\\n  from openalea.aml import Feature\\n  f = Feature(x,"ZZ")\\n  if f is not None: return -f\\n  else: return None\\n\'')], 22: [(1, 'None'), (3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None'), (9, 'None'), (10, 'None'), (11, 'None'), (12, 'None'), (13, 'None'), (14, 'None'), (15, 'None'), (16, 'None'), (17, 'None')], 23: [(1, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier.drf'")], 24: [(0, '3')], 25: [], 26: [(3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None'), (9, 'None'), (10, 'None'), (11, 'None'), (12, 'None'), (13, 'None'), (14, 'None'), (15, 'None'), (16, 'None'), (18, 'None'), (19, 'None'), (20, 'None'), (21, 'None'), (22, 'None')], 27: [], 28: [(0, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier_a19.mtg'"), (1, 'None'), (2, 'None'), (3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None')], 29: [(0, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier_a21.mtg'"), (1, 'None'), (2, 'None'), (3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None')], 30: [(0, '2')], 31: [], 32: [], 33: [], 34: [(0, '2')], 35: [], 36: [], 37: [], 38: [], 39: [], 40: [], 41: [(0, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier_f21.mtg'"), (1, 'None'), (2, 'None'), (3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None')], 42: [(0, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier_b7.mtg'"), (1, 'None'), (2, 'None'), (3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None')], 43: [], '__out__': [], '__in__': []},
                              lazy=True,
                              )

    pkg.add_factory(nf)


    nf = CompositeNodeFactory(name='MTGComponentSelection', 
                              description='', 
                              category='STAT.FrequencyDistriibution',
                              doc='',
                              inputs=[],
                              outputs=[],
                              elt_factory={38: ('Catalog.Python', 'print'), 39: ('Catalog.Data', 'int'), 40: ('System', 'annotation'), 41: ('System', 'annotation'), 42: ('Catalog.Python', 'getitem'), 43: ('vplants.mtg', 'Axis'), 12: ('vplants.mtg', 'Feature'), 13: ('vplants.mtg', 'VtxList'), 14: ('Catalog.Functional', 'filter'), 15: ('Catalog.Python', 'print'), 16: ('Catalog.Functional', 'function'), 17: ('Catalog.Functional', 'map'), 18: ('Catalog.Functional', 'function'), 19: ('Catalog.Python', 'print'), 26: ('System', 'annotation'), 44: ('vplants.mtg', 'MTG')},
                              elt_connections={10840384: (17, 0, 12, 1), 10840432: (14, 0, 17, 1), 10840420: (12, 0, 15, 0), 10840456: (13, 0, 14, 1), 10840444: (18, 0, 17, 0), 10840396: (16, 0, 14, 0), 10840336: (43, 0, 38, 0), 10840360: (39, 0, 42, 1), 10840468: (17, 0, 19, 0), 10840408: (44, 0, 13, 0), 10840372: (13, 0, 42, 0), 10840348: (42, 0, 43, 0)},
                              elt_data={38: {'lazy': False, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'print', 'posx': 141.25, 'posy': 351.25, 'minimal': False}, 39: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': '2', 'posx': 170.0, 'posy': 92.5, 'minimal': False}, 40: {'txt': 'zz(x)', 'posx': -175.00805082693262, 'posy': 201.2592584509726}, 41: {'txt': 'trunk ?', 'posx': -173.25797031866324, 'posy': 91.004186430005007}, 42: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'getitem', 'posx': 83.75, 'posy': 168.75, 'minimal': False}, 43: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'Axis', 'posx': 141.25, 'posy': 247.5, 'minimal': False}, 12: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'Feature', 'posx': -53.54276420165322, 'posy': 426.28144166475272, 'minimal': False}, 13: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'VtxList', 'posx': -24.350337608127887, 'posy': 93.321315499098432, 'minimal': False}, 14: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'filter', 'posx': -62.906647077950623, 'posy': 199.92422185445309, 'minimal': False}, 15: {'lazy': False, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'print', 'posx': -43.629274935169661, 'posy': 521.56990154402899, 'minimal': False}, 16: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'function', 'posx': -253.71635185635918, 'posy': 86.877215841800862, 'minimal': False}, 17: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'map', 'posx': -107.71320871137644, 'posy': 309.16709868561759, 'minimal': False}, 18: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'function', 'posx': -255.85990539158678, 'posy': 196.93213116244405, 'minimal': False}, 19: {'lazy': False, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'print', 'posx': -140.26310731841031, 'posy': 424.01790945398136, 'minimal': False}, '__out__': {'priority': 0, 'caption': 'Out', 'lazy': True, 'posx': 20.0, 'posy': 250.0}, 26: {'txt': 'Select components', 'posx': -51.074596205981813, 'posy': -10.025608122080833}, '__in__': {'priority': 0, 'caption': 'In', 'lazy': True, 'posx': 20.0, 'posy': 5.0}, 44: {'lazy': True, 'hide': False, 'port_hide_changed': set([]), 'priority': 0, 'caption': 'MTG', 'posx': -136.77101067124337, 'posy': -9.9212783510250873, 'minimal': False}},
                              elt_value={38: [], 39: [(0, '2')], 40: [], 41: [], 42: [], 43: [(1, '2')], 12: [(0, 'None'), (2, "'XX'")], 13: [(1, '2')], 14: [], 15: [], 16: [(0, "'def is_on_trunk(x):\\n  from openalea.aml import Order\\n  return Order(x)==0'")], 17: [], 18: [(0, '\'def zz(x):\\n  from openalea.aml import Feature\\n  return Feature(x,"ZZ")\'')], 19: [], '__out__': [], 26: [], '__in__': [], 44: [(0, "'D:/Chris/Projets/OpenAlea/examples/PlantAnalysis/manguier_a21.mtg'"), (1, 'None'), (2, 'None'), (3, 'None'), (4, 'None'), (5, 'None'), (6, 'None'), (7, 'None'), (8, 'None')]},
                              lazy=True,
                              )

    pkg.add_factory(nf)


    pkgmanager.add_package(pkg)


